{
	"info": {
		"_postman_id": "971cb0c1-6ee3-40fd-81b3-62280c0f8d49",
		"name": "GIFTY",
		"description": "API endpoints for user management in the Gifty application",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9245154"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Setup First Admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Admin User\",\n    \"email\": \"admin@gifty.com\",\n    \"password\": \"Admin1234!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/setup-admin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"setup-admin"
							]
						},
						"description": "Create the first admin user (only works when no users exist in the system)"
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@gifty.com\",\n    \"password\": \"Admin1234!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"login"
							]
						},
						"description": "Login with user credentials to get an authentication token"
					},
					"response": []
				}
			],
			"description": "Authentication related endpoints"
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?page=1&limit=10&sort=createdAt:desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of items per page"
								},
								{
									"key": "sort",
									"value": "createdAt:desc",
									"description": "Sort field and direction (field:asc|desc)"
								}
							]
						},
						"description": "Get a paginated list of all users (admin only)"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						},
						"description": "Get a specific user by ID (admin or store_manager)"
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Customer\",\n    \"email\": \"customer@example.com\",\n    \"password\": \"Customer1234!\",\n    \"role\": \"customer\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Create a new user (admin only)"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"name\": \"Administrator\",\n\"email\": \"admin@gifty.com\",\n\"role\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						},
						"description": "Update an existing user (admin only)"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						},
						"description": "Delete a user (admin only)"
					},
					"response": []
				}
			],
			"description": "User management endpoints"
		},
		{
			"name": "Stores",
			"item": [
				{
					"name": "Create Store",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My Store\",\n    \"ownerId\": \"{{userId}}\",\n    \"email\": \"store@example.com\",\n    \"phone\": \"+1234567890\",\n    \"address\": \"123 Store St\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/stores",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"stores"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Stores",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/stores",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"stores"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Store by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/stores/{{storeId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"stores",
								"{{storeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Store",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Store\",\n    \"email\": \"updated@example.com\",\n    \"phone\": \"+0987654321\",\n    \"address\": \"456 Updated St\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/stores/{{storeId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"stores",
								"{{storeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Store",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/stores/{{storeId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"stores",
								"{{storeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Stores by Owner ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/stores/owner/{{userId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"stores",
								"owner",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Create Product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"storeId\": \"{{storeId}}\",\n    \"name\": \"New Product\",\n    \"description\": \"Product description\",\n    \"price\": 99.99,\n    \"isActive\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					}
				},
				{
					"name": "Get All Products",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					}
				},
				{
					"name": "Get Product by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/products/{{productId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{productId}}"
							]
						}
					}
				},
				{
					"name": "Update Product",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Product\",\n    \"description\": \"Updated description\",\n    \"price\": 149.99,\n    \"isActive\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/products/{{productId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{productId}}"
							]
						}
					}
				},
				{
					"name": "Delete Product",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/products/{{productId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{productId}}"
							]
						}
					}
				},
				{
					"name": "Get Products by Store ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/products/store/{{storeId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"store",
								"{{storeId}}"
							]
						}
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-save the auth token from login response",
					"if (pm.response.code === 200 && pm.info.requestName === \"Login\") {",
					"    const responseJson = pm.response.json();",
					"    if (responseJson.status === 'success' && responseJson.data && responseJson.data.token) {",
					"        pm.environment.set(\"auth_token\", responseJson.data.token);",
					"        console.log(\"Auth token saved to environment\");",
					"        ",
					"        // Also save the user ID if available",
					"        if (responseJson.data.user && responseJson.data.user.id) {",
					"            pm.environment.set(\"user_id\", responseJson.data.user.id);",
					"            console.log(\"User ID saved to environment\");",
					"        }",
					"    }",
					"}",
					"",
					"// Save user ID from create user response",
					"if ((pm.response.code === 201) && ",
					"    (pm.info.requestName === \"Create User\" || pm.info.requestName === \"Setup First Admin\")) {",
					"    const responseJson = pm.response.json();",
					"    if (responseJson.status === 'success' && responseJson.data && responseJson.data.id) {",
					"        pm.environment.set(\"user_id\", responseJson.data.id);",
					"        console.log(\"Created user ID saved to environment\");",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		}
	]
}